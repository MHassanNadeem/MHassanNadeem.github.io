# Site
repository: MHassanNadeem/MHassanNadeem.github.io
favicon: images/favicon.ico

# Content configuration version
version: 2

# Personal info
name: M.Hassan Nadeem
title: Software Engineer
email: me@HassanNadeem.com
website: HassanNadeem.com

# Dark Mode (true/false/never)
darkmode: false

# Social links
twitter_username: mhassannadeem
github_username:  mhassannadeem
instagram_username: mhassannadeem
linkedin_username: mhassannadeem
youtube_username: hassannadeem

# Additional icon links
# additional_links:
# - title: itsgoingto.be
#   icon: fas fa-globe
#   url: https://www.itsgoingto.be
# - title: another link
#   icon: font awesome brand icon name (eg. fab fa-twitter) (https://fontawesome.com/icons?d=gallery&m=free)
#   url: Link url (eg. https://google.com)

# Google Analytics and Tag Manager
# Using more than one of these may cause issues with reporting
# gtm: "GTM-0000000"
# gtag: "UA-00000000-0"
google_analytics: "UA-71772128-2"

# About Section
# about_title: About Me
about_profile_image: images/profile.jpg
about_content: | # this will include new lines to allow paragraphs
  Hi, my name's Muhammad Hassan Nadeem. I prefer to go by Hassan. I'm a software and hardware engineer. I have designed various products from ground up - all the way from pcb layouts to writing code. I have worked at a number of companies gaining teamwork and leadership skills.

  I write <mark>clean</mark> and <mark>secure</mark> code.

  I am most skilled in: <mark>Python</mark> and <mark>C</mark>.
  At my current job, I deal with <mark>Python</mark>, <mark>Typescript</mark>, <mark>React</mark> and <mark>Deployment</mark>/<mark>Maintenance</mark>.

content:
  - title: Experience # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: left
        title: Bloomberg L.P.
        link: https://bloomberg.com
        sub_title: Software Engineer
        caption: July 2019 - Present
        quote: >
          Worked in a team as a full stack engineer to support Bloomberg Enterprise Access Point, data.bloomberg.com. Serves >2M API requests/day.
        description: | # this will include new lines to allow paragraphs
            - Built multiple backend <mark>RestAPI</mark> micro-services using <mark>Python</mark>, <mark>Flask</mark>, <mark>FastApi</mark>, <mark>Gunicorn</mark>, <mark>Apache Solr</mark> and <mark>Apache Kafka</mark>.
            - Created UI components using <mark>node</mark>, <mark>Express</mark>, <mark>TypeScript</mark> and <mark>React</mark>.
            - Designed <mark>REST</mark> <mark>APIs</mark> following <mark>OpenAPI</mark> specification.
            - Containerized various repositories using <mark>Docker</mark>.
            - Implemented <mark>CI/CD</mark> workflows on <mark>Jenkins</mark> for testing, packaging and deployment of various packages.
            - Spearheaded the delivery of various features from technical design, development, deployment to maintenance.
            - Used locust.io to benchmark and stress our services before major release.
# -------------------------------
      - layout: left
        title: Virginia Tech
        link: https://ssrg.ece.vt.edu/
        sub_title: Research Assistant - Systems Software Research Group (SSRG)
        caption: August 2017 - May 2019
        quote: >
          Worked on <mark>computer security</mark> under the supervision of a now Assistant Professor Ruslan Nikolaev in a group led Professor Binoy Ravindran, this work resulted in a publication in <mark>ASPLOS 2022</mark>.
        additional_links:
          - title: Ruslan Nikolaev
            icon: fas fa-globe
            url: https://rusnikola.github.io/
          - title: Binoy Ravindran
            icon: fas fa-globe
            url: https://ece.vt.edu/people/profile/ravindran.html
        description: | # this will include new lines to allow paragraphs
          - Improved <mark>OS</mark> security by implementing <mark>Linux Kernel Module</mark> continuous address space re-randomization to defend against Just-In-Time ROP attacks.
          - Added support to compile and load <mark>Linux Drivers</mark> as position independent code, extending KASLR to 64 bits.
          - Implemented lockfree, high performance algorithm for stack and code re-randomizaton.
          - Experiments with ethernet driver re-randomized at 1ms period resulted in negligible  impact on CPU utilization and network throughput.
# -------------------------------
      - layout: left
        title: Siemens (Mentor Graphics)
        link: https://siemens.com
        sub_title: Software Engineer
        caption: August 2016 - June 2017
        quote: >
          Worked in a team led by Ahmed Majeed.
        additional_links:
          - title: Ahmed Majeed
            icon: fas fa-globe
            url: https://www.linkedin.com/in/ahmedmajeed
        description: | # this will include new lines to allow paragraphs
            - Worked in a team to implement features and maintain AUTOSAR OS for automotive ECUs.
            - Responsible for maintaining AUTOSAR OS port on ARM Cortex processors.
# -------------------------------
      - layout: left
        title: Viaesys
        link: https://viaesys.com/
        sub_title: Software Engineer
        caption: May 2015 - July 2016
        quote: >
          Worked independently to design and code a hardware gadget for <mark>GPS Tracking</mark>, Salt Tracking and Field Crew Management for North American municipal industry. These devices are operational on the field today.
        additional_links:
          - title: Raqib Omer
            icon: fas fa-globe
            url: https://www.linkedin.com/in/raqib-omer/
        description: | # this will include new lines to allow paragraphs
          - Developed <mark>firmware</mark> for ARM® Cortex® M4 μProcessor with fixed-priority preemptive scheduling (pre-prod) featuring support for file system and over the air updates.
          - Wrote drivers to interface with various <mark>sensors</mark> over a variety of communication protocols.
          - Wrote <mark>simulators</mark> to simulate various sensors and developed a <mark>hardware testing</mark> setup for <mark>quality assurance</mark> of our products.
          - Developed <mark>Python</mark> based framework to build, package and deliver <mark>over the air updates</mark> via TFTP.
          - Designed multi-layered <mark>PCBs</mark>. Including circuit design, component selection, schematic design and PCB layout.

# -------------------------------
      - layout: left
        title: LUMS
        link: https://lums.edu.pk/
        sub_title: Teaching Assistant
        caption: Fall, Spring 2014-2015
        quote: >
          <mark>Introduction to programming in C++</mark>, <mark>Microcontrollers and Interfacing</mark>
        description: | # this will include new lines to allow paragraphs
          - Worked under the supervision of Prof. Jahangir Ikram (Jikram) to design development boards that were used in lab exercises and course projects (~150 pupils).
          - Updated Lab Manuals, delivered lab <mark>lectures</mark>, evaluated students' lab performance and supervised their course projects.
          - Designed and graded assignments and quizzes.
# --------------------------------------------------------------------------------------------

  - title: Education # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: left
        title: Virginia Tech
        caption: August 2017 - May 2019
        sub_title: M.S. Computer Science
        quote: >
          Got degree in Computer Science but did my thesis with the Computer Engineering Department. I was also employed part-time as a research assistant.
        description: | # this will include new lines to allow paragraphs
          Courses: Linux Kernel Programming, Computer Architecture, Multiprocessor Programming, Systems Security, Data Analytics, Info Visualization, Urban Computing
# -------------------------------
      - layout: left
        title: LUMS
        caption: August 2011 - May 2015
        sub_title: B.S. Electrical Engineering
        quote: >
          In my senior year I was employed part-time as a <mark>teaching assistant</mark>. I also assumed various positions as an unpaid <mark>research assistant</mark>.
        description: | # this will include new lines to allow paragraphs
          Courses: Microcontrollers and Interfacing, Embedded Systems, Computer Networks, Data Structures, Advanced Programming

  - title: Projects # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: top-middle
        title: pigeon (minimal twitter clone)
        link: https://github.com/MHassanNadeem/pigeon
        link_text: github::MHassanNadeem::pigeon
        additional_links:
          - title:  Slides
            icon: fab fa-globe
            url: https://github.com/MHassanNadeem/pigeon/blob/master/Slides.pdf
          - title:  Source Code
            icon: fab fa-github
            url: https://github.com/MHassanNadeem/pigeon
        quote: >
          Write a minimal twitter clone to demonstrate various web attacks and their defenses.
        description: | # this will include new lines to allow paragraphs
          - HTML injection.
          - SQL injection.
          - Cross Site Scripting (XSS).
          - Cross Site Request Forgery (CSRF).
          - XSS Worm.
          - Sammy Worm.
      - layout: top-middle
        title: Parrot AR Tracking Drone
        link: https://github.com/MHassanNadeem/Parrot-AR-Drone-Tracking
        link_text: github::MHassanNadeem::Parrot-AR-Drone-Tracking
        additional_links:
          - title:  Demo
            icon: fab fa-youtube
            url: https://www.youtube.com/watch?v=JPkZdP4H1DE
          - title:  Source Code
            icon: fab fa-github
            url: https://github.com/MHassanNadeem/Parrot-AR-Drone-Tracking
        quote: >
          Parrot AR Drone was programmed to follow a marker using computer vision.
        description: | # this will include new lines to allow paragraphs
          - Cross-compiled <mark>OpenCV</mark> for drone's <mark>ARM</mark> processor.
          - Drone's video feed was captured from <mark>TCP</mark> port and decoded using <mark>FFMPEG</mark> libraries for OpenCV.
          - Multithreaded application was written to process the video feed and control the drone using <mark>PID</mark> loops.
      - layout: top-middle
        title: Digital Logic Circuit Simulator
        link: https://github.com/MHassanNadeem/Digital-Logic-Circuit-Simulator
        link_text: github::MHassanNadeem::Digital-Logic-Circuit-Simulator
        additional_links:
          - title:  Demo
            icon: fab fa-youtube
            url: https://www.youtube.com/watch?v=SiQKKMb5u9s
          - title:  Source Code
            icon: fab fa-github
            url: https://github.com/MHassanNadeem/Digital-Logic-Circuit-Simulator
        quote: >
          Digital Logic Circuit Simulator written in Java using swing toolkit, as a course project for Advanced Programming CS:300 Spring 2012-13, a course I look in my 2nd year of B.S. at LUMS.
        description: | # this will include new lines to allow paragraphs
          - Used <mark>Swing</mark> toolkit to design and code Digital Logic Circuit Simulator in <mark>Java</mark>.
          - Implemented Logic Gates such as <mark>AND</mark>, <mark>OR</mark>, <mark>XOR</mark> and <mark>NOR</mark>.
          - Implemented debugging tools such as <mark>Logic Stage</mark> and <mark>Logic Probe</mark>.
          - Implemented Digital ICs such as <mark>Counter</mark> and <mark>7 segment Display Unit</mark>.
          - Implemented ability to save and load designs to file system.
      - layout: top-middle
        title: Line Follower Robot
        link: https://github.com/MHassanNadeem/line-follower-robot
        link_text: github::MHassanNadeem::line-follower-robot
        additional_links:
          - title:  Demo
            icon: fab fa-youtube
            url: https://www.youtube.com/shorts/9xUAluQRRqk
          - title:  Source Code
            icon: fab fa-github
            url: https://github.com/MHassanNadeem/line-follower-robot
        quote: >
          <mark>Handcarfted</mark> a line follower robot as a course project for Digital Circuit Design, a course I look in my 2nd year of B.S. at LUMS.
        description: | # this will include new lines to allow paragraphs
          - <mark>Recycled</mark> an old ice-cream box into a line following robot.
          - <mark>Machined</mark> components to connect motors with toy wheels.
          - Used basic hardware <mark>logic gates</mark> and photodiodes to program the robot to follow a black line.
      - layout: top-middle
        title: Bomberman Game
        link: https://github.com/MHassanNadeem/Bomberman_Java
        link_text: github::MHassanNadeem::Bomberman_Java
        additional_links:
          - title:  Demo
            icon: fab fa-youtube
            url: https://www.youtube.com/shorts/BvzmhVA0msA
          - title:  Source Code
            icon: fab fa-github
            url: https://github.com/MHassanNadeem/Bomberman_Java
        quote: >
          Recreated one of my favourite childhood game in Java, for an assignment for Advanced Programming CS:300 Spring 2012-13, a course I look in my 2nd year of B.S. at LUMS.
        description: | # this will include new lines to allow paragraphs
          - Used <mark>Swing</mark> toolkit to design and code bomberman game in <mark>Java</mark>.


# --------------------------------------------------------------------------------------------
  - title: Publications
    layout: list
    content:
      - layout: left
        title: "Adelie: Continuous Address Space Layout Re-randomization for Linux Drivers"
        link: https://dl.acm.org/doi/10.1145/3503222.3507779
        link_text: dl.acm.org
        sub_title: 27th edition of the ASPLOS
        caption: 2nd Author
        description: | # this will include new lines to allow paragraphs
          While address space layout randomization (ASLR) has been extensively studied for user-space programs, the corresponding OS kernel's KASLR support remains very limited, making the kernel vulnerable to just-in-time (JIT) return-oriented programming (ROP) attacks. Furthermore, commodity OSs such as Linux restrict their KASLR range to 32 bits due to architectural constraints (e.g., x86-64 only supports 32-bit immediate operands for most instructions), which makes them vulnerable to even unsophisticated brute-force ROP attacks due to low entropy. Most in-kernel pointers remain static, exacerbating the problem when pointers are leaked.

          Adelie, our kernel defense mechanism, overcomes KASLR limitations, increases KASLR entropy, and makes successful ROP attacks on the Linux kernel much harder to achieve. First, Adelie enables the position-independent code (PIC) model so that the kernel and its modules can be placed anywhere in the 64-bit virtual address space, at any distance apart from each other. Second, Adelie implements stack re-randomization and address encryption on modules. Finally, Adelie enables efficient continuous KASLR for modules by using the PIC model to make it (almost) impossible to inject ROP gadgets through these modules regardless of gadget's origin.
      - layout: left
        title: "Linux Kernel Module Continuous Address Space Re-Randomization"
        link: https://vtechworks.lib.vt.edu/handle/10919/104685
        link_text: vt.edu
        sub_title: Virginia Tech Electronic Theses and Dissertations
        caption: Masters Thesis
        description: | # this will include new lines to allow paragraphs
          Address space layout randomization (ASLR) is a technique employed to prevent exploitation of memory corruption vulnerabilities in user-space programs. While this technique is widely studied, its kernel space counterpart known as kernel address space layout randomization (KASLR) has received less attention in the research community. KASLR, as it is implemented today is limited in entropy of randomization. Specifically, the kernel image and its modules can only be randomized within a narrow 1GB range. Moreover, KASLR does not protect against memory disclosure vulnerabilities, the presence of which reduces or completely eliminates the benefits of KASLR.

          In this thesis, we make two major contributions. First, we add support for position-independent kernel modules to Linux so that the modules can be placed anywhere in the 64-bit virtual address space and at any distance apart from each other. Second, we enable continuous KASLR re-randomization for Linux kernel modules by leveraging the position-independent model. Both contributions increase the entropy and reduce the chance of successful ROP attacks. Since prior art tackles only user-space programs, we also solve a number of challenges unique to the kernel code.

          Our experimental evaluation shows that the overhead of position-independent code is very low. Likewise, the cost of re-randomization is also small even at very high re-randomization frequencies.

# --------------------------------------------------------------------------------------------

  - title: Skills
    layout: text
    content: | # this will include new lines to allow paragraphs
      - Proficient in <mark>Python</mark> and <mark>C</mark>.
      - Experience in <mark>Javascript</mark>, <mark>Typescript</mark>, <mark>Java</mark>, <mark>Nginx</mark>, <mark>MATLAB</mark>, <mark>C++</mark>, <mark>Assembly Language</mark>, <mark>Linker Scripts</mark>, <mark>Makefile</mark>, <mark>Apache Solr</mark>, <mark>Apache Kafka</mark>, <mark>React</mark>, <mark>Docker</mark>, <mark>Jenkins</mark>, <mark>OpenAPI</mark>, <mark>Rest</mark>, <mark>Linux Kernel</mark>, <mark>Git</mark>, <mark>Hardware Communication Protocols</mark>, <mark>Debugging</mark>

# --------------------------------------------------------------------------------------------

  - title: A Little More About Me
    layout: text
    content: | # this will include new lines to allow paragraphs
      Alongside my interests in software engineering and product development some of my other interests and hobbies are:
      - Watching Movies and TV shows. Friends, Seinfeld, Big Bang Theory, Inception, Dark Knight are amongst my favourites.
      - Table Tennis and Cricket
      - Blogging
      - I am also getting into hosting my own podcast

# Footer
footer_show_references: true
# references_title: References on request (Override references text)

# Build settings
remote_theme: sproogen/resume-theme

sass:
  sass_dir: _sass
  style: compressed

plugins:
 - jekyll-seo-tag
